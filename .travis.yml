dist: xenial
language: go

go:
  - 1.12.7

env:
  global:
    - ARCH=$(go env GOARCH)
    - TAG="ci"
    - CODECOV_TOKEN="d1e39bea-f800-45de-8266-3e9b85e2594a"

sudo: required

services:
  - docker

addons:
  apt:
    update: true

install:
  - make bootstrap
  - sudo apt-get install --yes libudev-dev
  - if [ "$TRAVIS_BUILD_DIR" != "$GOPATH/src/github.com/openebs/node-disk-manager" ]; then
    mkdir -p $GOPATH/src/github.com/openebs/;
    mv $TRAVIS_BUILD_DIR $GOPATH/src/github.com/openebs;
    cd $GOPATH/src/github.com/openebs/node-disk-manager;
    fi
  # Download and install kubectl
  - curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v1.12.0/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
  # Download and install kind using Go toolchain
  - GO111MODULE="on" go get sigs.k8s.io/kind
  # Download and install kind using cURL
  - curl -Lo kind https://github.com/kubernetes-sigs/kind/releases/download/0.0.1/kind-linux-amd64 && chmod +x kind && sudo mv kind /usr/local/bin/
  # we need openSeaChest repo to build node-disk-manager
  - pushd .
  - cd ..
  # Hotfix-Makefile_fix is the Release-19.06 with certain fixes in Makefile
  - git clone --recursive --branch Release-19.06.02 https://github.com/openebs/openSeaChest.git
  - cd openSeaChest/Make/gcc
  - make release
  - cd ../../
  - sudo cp opensea-common/Make/gcc/lib/libopensea-common.a /usr/lib
  - sudo cp opensea-operations/Make/gcc/lib/libopensea-operations.a /usr/lib
  - sudo cp opensea-transport/Make/gcc/lib/libopensea-transport.a /usr/lib
  - popd

before_script:
  - mkdir -p $HOME/.kube
  # Create a new Kubernetes cluster using kind
  - kind create cluster
  # Set KUBECONFIG environment variable
  - export KUBECONFIG="$(kind get kubeconfig-path)"
  - echo $KUBECONFIG
  - ln -s $KUBECONFIG $HOME/.kube/config
  - ls -latr $HOME/.kube
  - kind get clusters

script:
  - make shellcheck
  - sudo make
  # Here sudo -E env "PATH=$PATH" make test is required for running tests with
  # sudo permissions since we are making use of scsi device mockdata in smartprobe_test
  # which could be fetched for a SCSI device with sudo permissions only since to access
  # a particular scsi device, sudo or root permissions are required.
  - sudo -E env "PATH=$PATH" make test
  - make integration-test

after_success:
  - make push
  - bash <(curl -s https://codecov.io/bash)
